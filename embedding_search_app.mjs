import fetch from 'node-fetch';
import fs from 'fs';
import { Matrix } from 'ml-matrix';

import csv from 'csv-parser';
import { promisify } from 'util';

import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';

console.log("starting with env:", process.env)

let app = express();
const ALLOWED_DOMAINS = ['http://localhost:5001', 'http://127.0.0.1:5001'];
app.use(cors({
  origin: ALLOWED_DOMAINS,
  credentials: true
}));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

const static_path = process.env.SERVER_STATIC_PATH || './single-app';
app.use(express.static(static_path))

const args = process.argv.slice(2); // Remove first two elements

// Printing the arguments
console.log(args);

const readFile = promisify(fs.readFile);

async function readCSV(csvFilePath = 'all_cosfodb_ddl_embeddings.csv') {
  try {
    const jsonArray = [];
    const fileStream = fs.createReadStream(csvFilePath).pipe(csv());

    for await (const row of fileStream) {
      let keys = Object.keys(row);
      for (let k of keys) {
        const trimmedKey = k.replace(/^\s+|\s+$/g, '');
        if (trimmedKey !== k) {
          row[trimmedKey] = row[k];
          delete row[k];
        }
      }

      jsonArray.push(row);
    }
    return jsonArray;
  } catch (error) {
    console.error('Error reading CSV:', error);
    return null;
  }
}

async function getEmbeddingForInput(input = '') {
  const apiUrl = `http://${process.env.my_ip}:8000/v1/embeddings`;
  // Make the API request using node-fetch
  const response = await fetch(apiUrl, {
    method: 'POST',
    headers: {
      'accept': 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ input }),
  });

  if (response.ok) {
    const responseData = await response.json();
    let embedding = responseData.data[0].embedding;
    console.log(`input:${input}, embedding:${embedding}`);
    return embedding;
  } else {
    console.error('API Request Error:', response.statusText);
    return null;
  }
}

const RESOURCE_NAME = process.env.RESOURCE_NAME;
const AZURE_API_KEY = process.env.AZURE_API_KEY;
const DEPLOY_NAME_EMBEDDING = process.env.DEPLOY_NAME_EMBEDDING;
const url = `https://${RESOURCE_NAME}.openai.azure.com/openai/deployments/${DEPLOY_NAME_EMBEDDING}/embeddings?api-version=2023-05-15`;

async function getEmbeddingsFromAzure(inputText = '') {
  const headers = {
    'Content-Type': 'application/json',
    'api-key': AZURE_API_KEY
  };
  const body = {
    input: inputText
  };

  try {
    const response = await fetch(url, {
      method: 'POST',
      headers,
      body: JSON.stringify(body)
    });

    if (response.ok) {
      const data = await response.json();
      let embedding = data.data[0].embedding;
      console.log(`inputText:${inputText}\nusage:${JSON.stringify(data.usage)}\nembedding:${embedding}`); // Handle the response data here
      return embedding;
    } else {
      console.log('Request failed:', response.status, response.statusText);
    }
  } catch (error) {
    console.log('An error occurred:', error);
  }
}


function dotProduct(a = [], b = []) {
  return a.reduce((sum, val, idx) => sum + val * b[idx], 0);
}

function magnitude(vector) {
  return Math.sqrt(vector.reduce((sum, val) => sum + val * val, 0));
}

function cosineSimilarity(a, b) {
  let dotProductValue = dotProduct(a, b);
  let magnitudesA = magnitude(a);
  let magnitudesB = magnitude(b);

  return dotProductValue / (magnitudesA * magnitudesB);
}


async function stringsRankedByRelatedness(embedding_of_query = [], ddl_embeddings = [], topN = 5) {
  // console.log("ddl_embeddings[10]", JSON.stringify(ddl_embeddings[10]));
  let strings_and_relatednesses = ddl_embeddings.map(singleEmbedding => {
    if (!singleEmbedding.embedding) {
      console.error("invalid embedding:", singleEmbedding.embedding);
      return { ...singleEmbedding, score: 0 };
    }
    return { ...singleEmbedding, score: cosineSimilarity(embedding_of_query, JSON.parse(`[${singleEmbedding.embedding}]`)) }
  });
  let tow_matched_rows = strings_and_relatednesses.sort((a, b) => b.score - a.score).slice(0, topN);

  let matched_text = tow_matched_rows.map(row => {
    let row_without_embedding = { ...row };
    if (row_without_embedding.embedding) {
      delete row_without_embedding.embedding;
    }
    return row_without_embedding;
  });
  // console.log("top matched:", JSON.stringify(matched_text));
  return matched_text;
}

const DEPLOY_NAME_GPT35 = process.env.DEPLOY_NAME;
const BASE_URL = `https://${RESOURCE_NAME}.openai.azure.com/openai/deployments/${DEPLOY_NAME_GPT35}/chat/completions`;
const API_VERSION = '2023-05-15';

const headers = {
  'Content-Type': 'application/json',
  'api-key': AZURE_API_KEY
};

async function makeOpenIAIRequest(sqlQuery, ddlText) {
  try {
    const data = {
      temperature: 1.0,
      stream: false,
      messages: [
        { role: 'system', content: `现在的时间是:${new Date()}, 你是一个优秀的数据库工程师，特别擅长根据用户的输入来编写SQL查询数据，请你保持回答的简洁性，对SQL的解析不要超过50字。请你完全基于以下DDL语句来回答用户的请求。如果你没有找到用户请求的表，请你不要猜测，请不要使用不存在的表，这种情况下请你向用户提问，或者回答"抱歉我没找到答案"。以下是全部可用的DDL语句:\n"""\n${ddlText}\n"""` },
        { role: 'user', content: sqlQuery }
      ]
    };
    const response = await fetch(`${BASE_URL}?api-version=${API_VERSION}`, {
      method: 'POST',
      headers,
      body: JSON.stringify(data)
    });

    if (!response.ok) {
      throw new Error(`Request failed with status code ${response.status}`);
    }

    const result = await response.json();
    console.log(`User query:${sqlQuery},\n\nResult from GPT:\n${result.choices[0].message.content}`);
  } catch (error) {
    console.error('Error:', error.message);
  }
}

async function runSimpleQueryEmbedding(csvFile, searchQuery, use_azure = false) {
  let allEmbeddings = await readCSV(csvFile);
  let embeddingOfQuery = use_azure ? await getEmbeddingsFromAzure(searchQuery) : await getEmbeddingForInput(searchQuery);
  let matched = await stringsRankedByRelatedness(embeddingOfQuery, allEmbeddings, 10);
  console.log(`\nsearchQuery:${searchQuery},\nmatched:${matched.map(json => JSON.stringify(json)).join("\n")}\n`);
}

// runSimpleQueryEmbedding(args[0], args[1], args[2] == 'use_azure')

const CSV_FILE = args[0];
const USE_AZURE = args[1] == 'use_azure';

const port = parseInt(process.env.PORT || "7001")
const all_hangzhou_sku = new Set(["1003074364015", "1003074364153", "1003572460835", "1003850240672", "1005425838013", "1006347583335", "1006443126483", "1006443126588", "1006626538154", "1006626538887", "1007506758476", "1007506758803", "1007534363546", "1007534624760", "1007534624821", "1007565354171", "1007565354578", "1007801326057", "100803", "1009660717334", "1009660717414", "1012151117764", "1012306041318", "1012471635833", "1012643444281", "1012674274088", "1012685847530", "1012728417425", "1012734812082", "1012746060680", "1012867276427", "1014117443215", "1017034667453", "1017065474305", "1017770764724", "1017770764850", "1017858542718", "1018071132161", "1018071132224", "1018071132622", "102334", "1024547101554", "102483", "10268", "102768", "103070", "1031132560", "103744", "1039227087051", "1039227087737", "10423617781", "1042500357450", "1042500357815", "104312", "1043235473005", "1043235473177", "1043412041542", "1043412041751", "1043576870313", "1043576870778", "1043683426118", "1043683426248", "1043683426715", "1044036003650", "1044036003715", "1044431823443", "1044431823554", "1044483833663", "105020", "1051521665445", "1051521665576", "1051521665600", "1057172861145", "1057172861704", "106306", "1063616817838", "1065755177422", "1066351552460", "10705177641", "1074055162505", "1074055162548", "10741643313", "10741643825", "1076025581368", "1076025581652", "1076054651148", "1076054651332", "1076064103368", "1076064103633", "1076064103886", "1076073501451", "1076076483612", "1076076483646", "1076081328377", "1076081361037", "1076081361136", "1076088214200", "1076088214880", "1076101783022", "1076101783433", "1076102672400", "1076102672743", "1076130033633", "1076141070751", "1076157868372", "1076240182222", "1076263654321", "1076288076448", "1076288076453", "1076305622750", "1076343055710", "1076343055838", "1076361636511", "1076375132375", "1076375132817", "1076431102010", "1076431102357", "1076431102833", "1076446875004", "1076461514600", "1076476703215", "1076476703275", "1076476703757", "1076536377125", "1076536377748", "1076554184776", "1076570814834", "1076583832401", "1076616400403", "1076677158413", "1076677158642", "1076702503853", "1076733228553", "1076741240635", "1076764567400", "1076775555574", "1076806381084", "1076836484457", "1076836484683", "1076851308168", "1076851308242", "1077082288345", "1077082288481", "1078070484644", "1078161585238", "1078474481377", "1078485046017", "1078621525123", "1078864446613", "1080112624470", "1080175271711", "1080258448260", "1080617754478", "1080622840666", "1080707241130", "1080737281365", "1081881001", "1082137310721", "1082222213500", "1082381132460", "1082437745073", "1082437745526", "1082604365316", "1082665334362", "10834257570", "10834257647", "1083622608531", "1088064114676", "1088420270258", "1088567886231", "1088630801484", "1088630801888", "1088684586801", "1088701336383", "1088746268725", "1096508452400", "1096508452520", "1136267853", "11373068743", "11428423721", "11448835845", "11517232428", "11721810062", "11767011331", "11775704235", "1204000125", "1207763507", "1230837071", "1230837614", "1233884325", "1233884862", "1235674425", "12505321016", "12505321546", "12506162051", "12506162785", "12515614284", "12515614731", "12518560204", "12518560815", "12543263362", "12543263483", "12546560118", "12546560466", "12554614050", "12554614080", "12554614144", "1256524464", "1256524478", "12572807018", "12572807678", "12574166061", "12574166282", "12577240023", "12577240376", "12585488128", "1273556800", "1314372805", "13318331443", "13405585170", "13465318844", "13466145726", "1371585218", "14215", "14407205781", "145515", "14611185562", "14623", "14637046763", "14666272624", "14667731207", "14670550624", "146762", "146882", "147230", "147245", "147312", "147483", "14751170210", "14751170458", "147706", "147748", "149386", "15014313516", "15035056057", "15046521210", "15057174821", "15081216041", "15088208877", "15103217314", "15103217754", "15107342408", "15107342764", "15111541125", "15111541242", "1511375384", "1511852405", "1511852832", "15126316068", "15126316424", "15143065346", "151480", "15174258262", "15174258876", "15176681325", "15178473420", "15178473610", "15247724012", "152711", "15278450126", "15300532428", "15300532716", "15310171078", "1540042271", "15418784088", "15418784420", "15487486557", "15487486733", "15487540744", "15487540817", "15488238453", "15488238468", "15548377311", "15585263632", "157145", "1571800072", "1571800226", "1571800370", "1571800528", "1571800746", "15806002555", "15807581664", "15818648678", "15826505547", "15828765884", "15834480266", "15847437455", "15848321823", "15850140201", "15861476861", "15863222154", "15863222530", "15865278741", "15870034350", "15874432783", "15910507264", "15916355342", "15916355581", "15916448361", "15925511587", "15926378586", "15933364475", "15940055746", "15941444026", "15945018210", "15947150521", "15957404104", "15963621813", "15964566872", "15981836433", "15981884117", "15988811154", "15988811158", "15988811187", "15988811368", "15988811416", "15988811461", "15988811507", "16014671630", "1602403244", "1602403612", "16034305655", "16044071662", "16115142214", "16115142583", "16125137117", "1614042328", "1614042422", "16154124146", "16154124187", "16156071386", "16156071642", "16168800435", "1620361284", "1620361545", "1620361606", "1631030005", "16313305010", "16313305022", "16313305062", "16313305144", "16313305150", "16313305243", "16313305303", "16313305307", "16313305340", "16313305542", "16313305550", "16313305655", "16313305667", "16313305673", "16313305706", "16313305713", "16313305736", "16313305784", "16313305814", "16313305832", "16313305847", "16313305878", "16314008707", "16330286556", "16331003164", "16362073817", "16374182643", "16377365560", "16387408846", "1640413823", "1652411044", "16618316018", "16618316468", "16624622055", "16624622113", "16640571588", "16640571614", "16676460653", "16680730631", "16680730707", "1668230882", "16715608573", "16733582671", "16733582830", "16738467013", "16738467474", "16738467530", "16752304348", "16776325050", "16776325544", "16780836825", "16788463062", "16788463175", "16788463466", "16788463554", "16788463584", "16788463705", "16788463706", "16788463723", "16788463727", "16788463751", "16802538201", "16802538446", "16802538556", "16816572357", "16818385456", "16823457071", "16823457165", "16823457242", "16823457361", "16823457551", "16823457628", "16823457672", "16823457757", "16830404067", "16830404632", "16830662346", "16845505445", "16845505727", "16846483058", "16846483177", "16846483356", "16846483508", "16846483872", "16851585514", "16854131251", "16860138331", "16860138610", "16862508374", "16876453428", "16876453543", "16876453782", "16877633731", "16885761174", "16885761436", "16885761581", "17025477684", "17025477701", "17025477707", "17035050174", "17035050662", "17035702011", "17054666226", "1710361805", "17120703381", "17142611514", "17142611875", "17146322374", "1722654118", "17300170200", "17318701705", "17320871038", "17320871128", "17334571143", "17334571165", "17334571258", "17334571810", "17447307136", "17457560645", "17463414517", "17464663857", "17474853250", "17474853846", "1753555686", "176810", "17711325061", "17711325662", "17713413157", "17764073413", "17765302223", "17765302356", "17770838466", "17770838564", "17772040747", "17772361525", "17772361714", "17776432316", "17776432633", "17788011877", "1782881310", "178786", "17955024462", "17955024473", "17955024620", "17958725583", "17958725745", "18106228252", "18107232052", "18107232145", "18107232180", "18107232260", "18107232282", "18107232327", "18107232547", "18107232857", "1811047002", "18118144448", "18118144508", "18123527535", "18126761364", "18126761650", "18127728133", "18127728210", "18130548121", "18130548215", "18136177121", "18136177558", "1814363401", "18150866365", "18150866785", "18151711268", "18164424787", "18164544218", "18178521138", "18178521325", "18178521357", "18178521515", "18178847231", "18178847835", "1820531578", "1842423241", "185447", "18725210156", "18725548610", "18750251151", "1877324044", "188003", "1884053024", "188542", "18921045144", "18923157211", "18925414317", "18925414540", "18955828022", "18955828830", "18968776002", "18985410020", "19067118104", "19067118208", "19101385233", "19101385337", "19102877427", "19102877536", "19103502331", "19103502848", "19104060450", "19110640442", "19110640671", "19113745316", "19113745382", "19118240056", "19118240637", "19120823165", "19120823818", "19122771686", "19127578633", "19130255256", "19131126202", "19131126353", "19131576381", "19131576674", "19132282824", "19132677210", "19132677786", "19134325370", "19137540013", "19140803810", "19148162058", "19148162385", "19161371187", "19161371621", "19163651022", "19164527053", "19164527515", "19175831044", "19175831086", "19175831211", "19175831212", "19175831483", "19175831870", "19178885820", "19178885848", "19187278188", "19187867030", "19202023128", "19202023170", "19216773256", "19250103252", "19250103360", "19250103868", "19255077150", "19255077246", "19273851318", "1930874368", "1930874828", "2000", "2033075473", "2184", "2400337415", "2400337515", "2406521060", "2406521850", "2427873063", "2427873631", "2481241653", "2530346344", "2530346648", "2643", "2775683508", "2802738135", "2815", "2834011062", "28423", "28482", "28528", "2866818561", "28721", "28853", "297577", "2978220528", "297866", "300231", "300675", "303214", "303331", "303471", "303587", "3134726005", "3163224433", "3288050613", "332325", "332801", "36013", "3664358547", "3678555646", "3738015442", "3770235726", "3803673132", "3807662018", "3807662084", "3808367532", "38102276312243", "3816076886", "3821782753", "3828726048", "3831687508", "3833073330", "3833073331", "3834605103", "3835311776", "3836885075", "3845387754", "3871047473", "3873380875", "3880428785", "3880525148", "400044032", "400044545", "401183386", "402107208", "402107822", "406387225", "406387886", "4101213101", "410566051", "410566187", "422371184", "422371711", "425475253", "430852434", "431038734", "434634067", "436625365", "44102275360137", "4423141712", "451822723", "4557341311", "457483315", "458584311", "464633265", "464633512", "464763612246", "464763612276", "4804107341", "4915581226", "4915581658", "492666121704", "4960460111", "4974160047", "4981274847", "5001515636", "5100334363", "5101072544", "5101221275", "5101688573", "5102426584", "5103756010", "5105427631", "5106142008", "5108781781", "5116666343", "5116666618", "5116666677", "5116666730", "5121774810", "5124577078", "5124577807", "513485715654", "5140543535", "5144224103", "5144224763", "5144775282", "5147217104", "5147217431", "5147217573", "5148338027", "5148338567", "5155100800", "5155246058", "5155867070", "5158542374", "5161383874", "5163341636", "5163387608", "5165754752", "5165764871", "5165771276", "5167426774", "5170250232", "5170250641", "5181166233", "5188034133", "526123842240", "526248241114", "526328313406", "526747804453", "527004525437", "527040671107", "527040671331", "527150124138", "527215237646", "527284745140", "527284745274", "527341645521", "527644743480", "527644743838", "527644743844", "527742731788", "527753813074", "527753813341", "527753813386", "527788685224", "527828832076", "527828832115", "528144086521", "528144086887", "528513471281", "528513471540", "528752343284", "528752343504", "529013325258", "529013325846", "529027875858", "529235407400", "529235407435", "529235407523", "52953527188", "52953527825", "530627572474", "5311700461", "5311700685", "53221151346", "5322715203", "533036214540", "533130481141", "533223334235", "533228884181", "533228884185", "533276824271", "533368160061", "533750407553", "534427470320", "534475670018", "53455378208", "5346618610", "5346618756", "53476232840", "53515518233", "535341534887", "535403300486", "535482055613", "53560783073", "53560783258", "535644114067", "535648610406", "535881026250", "535881026256", "536136276223", "536136276488", "536463546211", "536680535765", "537085284126", "537140027554", "537140027847", "53730246120", "537315376681", "537315376736", "53780083185", "53780083617", "538403165566", "538503663026", "538503663658", "538682745037", "538682745608", "539518713023", "5400124221", "540073535254", "540073535458", "5401253741", "5401516681", "5404785088", "5404785202", "5404785340", "5404785778", "5406788870", "540752246420", "5410550738", "541236344115", "541236344571", "541256757675", "5412638401", "5413408573", "5414013080", "5414013566", "541520117608", "5417640774", "5421840074", "5423823048", "5423823845", "5423823858", "5423865460", "5423865803", "5424832026", "5424832412", "5424832428", "5424832452", "5424832458", "5424832761", "5428113610", "5428113787", "5431286383", "5431286405", "5431286580", "5431286614", "5431762315", "5432522228", "5432522406", "5432522523", "5432522541", "5432522546", "5432522781", "5432522802", "5434863521", "5434863852", "5437435460", "5437435665", "5437435856", "5438781850", "5440754460", "5440754616", "5440826264", "5442468100", "5442468538", "5442468580", "5442468633", "5443520862", "5444211161", "5444211306", "5444211381", "5444211465", "5444211573", "5444211744", "5444211784", "5444211828", "5444211847", "5444211850", "5444211852", "5445674623", "5447758064", "5447758211", "5447758378", "5447758500", "5447758526", "5450354301", "5450535868", "5454711634", "5454711766", "5455443142", "5455443276", "5455443410", "5455443441", "5455443674", "5456575347", "5456601464", "5456601528", "5456725064", "5456725100", "5456725107", "5456725138", "5456725325", "5456725437", "5456725461", "5456725807", "5466753733", "5467715040", "5467715760", "5473345110", "5473345142", "5473417166", "5474037118", "5474037216", "5474037880", "547656844828", "5476640286", "5476640640", "5476640708", "5476680055", "5476680236", "5476680656", "5477727080", "5477727182", "5477727265", "5477727582", "5480881447", "5480881527", "5480881625", "5480881832", "5481417203", "548432212083", "5485336082", "5485336218", "5485336521", "5487271485", "550231148106", "550231148142", "550231148264", "550231148418", "550231148478", "550231148612", "550231148626", "550231148847", "550286610026", "550286610222", "551243608200", "551243608546", "551512631478", "555525486512", "555525486587", "555608288024", "555608288336", "555774406556", "55581", "556338713017", "556338713450", "556338713528", "556338713618", "556338713640", "556711088305", "556812540738", "557011362658", "557068476070", "557068476555", "557068476637", "557564510631", "558815260463", "560002886282", "560002886430", "560002886441", "560002886721", "560217054473", "56065414683", "56065414847", "56065414871", "561028620163", "561308630781", "56143", "561448365300", "561517471610", "561517471750", "562081638375", "562081638407", "562081638766", "562082012007", "562082012078", "562082012122", "56217", "562205436020", "56231704562", "562550616761", "562647771432", "562648642534", "562687426006", "562702565228", "562840386003", "562840386025", "562840386063", "562840386074", "562840386670", "562840386783", "563613234651", "564208866222", "564562377871", "565588277301", "565588277457", "567332838412", "567860378213", "567860378320", "570080115017", "570080115351", "570080115528", "570107152405", "57045370202", "57045370245", "57045370506", "57045370621", "57045370748", "570455460408", "570710101274", "570710101627", "571641824388", "571641824524", "572047117116", "572047117477", "572047117856", "572101623005", "572101623155", "572242310347", "572442328020", "572442328343", "572442328532", "572457231176", "572457231457", "5732781776", "573278243631", "5733868685", "5733868875", "574755244138", "575220841356", "575220841434", "575220841542", "576088856251", "576481834775", "576481834887", "576513716168", "5765272505", "576542344150", "576662666622", "576662666667", "576703800112", "576703800355", "577324286300", "57765134333", "57765134472", "578882337304", "58466603127", "58466603271", "585342163074", "585342163677", "58566471004", "58566471785", "587558370155", "592253714400", "593226880851", "593538026134", "593538026174", "5988615334", "602182563", "605314103134", "60531754170", "605386061320", "605386061640", "605455167145", "605455167567", "605464186343", "605464186468", "605503640573", "605503640574", "60552504336", "60552504355", "60553221161", "605622672371", "605717167241", "605717167641", "605728114125", "605728114478", "605813582237", "605813582280", "605874603137", "605874603304", "6064", "607164503026", "607164503701", "607164503874", "607187855103", "607187855770", "607568871003", "607568871710", "607660553564", "607817002135", "607817002325", "608077176764", "608083408143", "608083408300", "608138607253", "608138607584", "610083503063", "6102287080522", "610338625674", "610615131608", "611184007", "611184144", "611184153", "611184227", "611184240", "611184320", "611184352", "611184418", "611184452", "611184462", "611184611", "611184621", "611184782", "611184841", "611260156", "611260702", "611260881", "612043078", "612248317", "612248345", "612248424", "612248481", "612248847", "613016505356", "613017424053", "61320358460", "61320358817", "61331118550", "613547514363", "613547514773", "61356245403", "61356245606", "61356245646", "6137", "613745513551", "61380084146", "61380084266", "613850383857", "614023306875", "614058473113", "614058473363", "614062872034", "614116158084", "614250624005", "614280586873", "614287283214", "614317724060", "614317724850", "614353467483", "614374556175", "614374556665", "614387036040", "614387036466", "614472122403", "614472122474", "614576550472", "614627748753", "614627748818", "614645885241", "614645885421", "614686248244", "614686248311", "614712351248", "614755756574", "614767335486", "614767335733", "614785202354", "614785202501", "614820772734", "614820772861", "614832246557", "614850135226", "614850135418", "614878841474", "614882385443", "614882385687", "615116755838", "6151406635", "615256354", "615256448", "61632425031", "61632425176", "61632425413", "61632425554", "61645538574", "616556247146", "61684207348", "61684207674", "616857566264", "61823785002", "61863256628", "618664814480", "618820438338", "61950665018", "61950665223", "61950665243", "61950665636", "61950665645", "621044725157", "621044725270", "621073264707", "621141278571", "621764484772", "62328475430", "625375312773", "625787008215", "625801401757", "627531831132", "62761071180", "62764752712", "6300834727", "63102477071", "631072358877", "631078313433", "631102041136", "6311608306", "631173601835", "63121255175", "63121255671", "6312223286", "631277557131", "631277557554", "631277557685", "631277557731", "631323758111", "631323758474", "63135283785", "6313552328", "631385217674", "631404023472", "631412142300", "63142304160", "63142304233", "63144536537", "63147012673", "631531762346", "63156382208", "63156382763", "631653866743", "631654642443", "63167635513", "631734233447", "631734233544", "631734233675", "631734233748", "63174713087", "631758567214", "6318341417", "63185670484", "63185670616", "631864842177", "631870767017", "63187288380", "631877421104", "631877421670", "632007156206", "632007156385", "632020452517", "632020452780", "63202366060", "63202366845", "632036032505", "632036032725", "632146640472", "632146640776", "632163560522", "632233024283", "632233024530", "632244425302", "632244425837", "632285883213", "632317487140", "632317487464", "632422311655", "632422705567", "6324578152", "632503708213", "632503708638", "632513220083", "632528267261", "632528267414", "6325453427", "6325453880", "632561645210", "632561645768", "63257801185", "632641232782", "632641232871", "632764356251", "632764356332", "632820121528", "632820121574", "632820121843", "632835737014", "633714576837", "6342481774", "6344138866", "634778562", "634778667", "634778714", "634778812", "634778876", "635283251550", "635283251558", "635730650713", "635780243620", "635806417564", "63584110512", "6362144564", "6371767862", "6372617212", "6377384178", "638656505713", "639562737042", "639742865251", "639742865787", "640700460417", "641401017014", "641401017056", "641401017133", "641401017256", "641401017267", "641401017774", "642216180434", "642404620047", "642404620677", "643004871054", "643083677066", "643083677103", "643083677603", "643284441115", "643321371724", "643620533430", "643620533886", "643670703178", "643732275857", "646477082472", "646477082881", "646576331070", "646576331141", "646576331157", "646576331421", "647012832271", "647201465473", "647201465834", "647367177613", "647378866300", "647378866448", "647460754164", "647460754413", "647460754420", "647471366", "647471767", "647471818", "647546640765", "647658402352", "647658402452", "647658402873", "647713556217", "647806870061", "650133454708", "652183671", "653171600616", "653181327213", "653181327756", "653231142240", "653417468816", "653537264654", "653537264762", "653872328", "653872545", "653872607", "653872736", "654401405508", "654401405748", "654602887405", "654602887580", "655028686155", "655028686824", "655083505523", "655083505773", "655157544170", "655157544877", "655172573538", "655172573582", "655211313543", "655211313658", "655221406148", "655221406685", "655222461102", "655222461812", "655307048014", "655307048872", "655407034405", "655487125203", "655487125552", "655506711147", "655506711358", "655520055427", "655520055434", "655541266322", "655541266708", "655565606062", "655565606863", "655578033188", "655637662003", "655637662657", "655651331416", "655651331562", "655767547468", "655781440553", "655781440781", "655787374371", "655821657107", "655821657165", "655856784642", "655856784714", "655863374320", "655863374488", "656148138", "656148186", "656148373", "656148427", "656148468", "656148531", "656148722", "656148726", "656148820", "656148840", "656148877", "656255356532", "656828265548", "657101884310", "658254428662", "658374623172", "660528875532", "661013577315", "661176561445", "661176561630", "661210374451", "661210374866", "661252513687", "66130222154", "66130222267", "66130222382", "66130222727", "661671328", "661671426", "661684438517", "662500645784", "663214053166", "663214053888", "663222812474", "663234370085", "663234370411", "663343322021", "663366082554", "663366082838", "663446743406", "663446743507", "663483757231", "663483757371", "663550736831", "663785374", "663785768", "663830587804", "664262873843", "664662126100", "664705005300", "664755736063", "664755736811", "665132688232", "665132688325", "665523754754", "666301638536", "666301638752", "666473552402", "666478452142", "666478452543", "666572205840", "670340051", "671263803", "671544783051", "671544803237", "671544803340", "673864613", "674157417157", "681287468", "6822", "684303043", "684303266", "684303631", "684303808", "684303815", "686088862", "687180248188", "687180248223", "687321000003", "687321000044", "687321000663", "687321000746", "687363501544", "687363501662", "687703151005", "687703151104", "687703151227", "687703151734", "688101455364", "688688162333", "689415036448", "697344032415", "697344032655", "697726525502", "697726525882", "699046220234", "699046220325", "699046220401", "699046220508", "699052884836", "699118381225", "699118381733", "699161486807", "699172462081", "699172462286", "699172462748", "699172462751", "699172462827", "699174730375", "699174730888", "69920310730", "699302461045", "699321231474", "699321231813", "699365102668", "699411845814", "699420722166", "699454158062", "699471883121", "699471883304", "699475151528", "699476810175", "699476810806", "699476810880", "699546374105", "699546622031", "699546622083", "699546622133", "699546622160", "699546622244", "699546622364", "699546622474", "699546622565", "699546622641", "699546622677", "699546622766", "699546622777", "699548513386", "699573431372", "699584541034", "699635076253", "699644453315", "699644453722", "69967010002", "69967010168", "69967010664", "69967010737", "69967010747", "69967010784", "699670185284", "699670185435", "699684607042", "699728018228", "699728018230", "699728018470", "699728018506", "699728018872", "699745474286", "699764053067", "699764053070", "699764053077", "699764053120", "699764053208", "699764053551", "699764053826", "699764053862", "699782206005", "699837470855", "699881071001", "6null60520322", "6null87080100", "6null87080520", "6null87080802", "700014314435", "700014314682", "700018864025", "700018864038", "700080137162", "700080137222", "700080137271", "700080137400", "700080137518", "700080137642", "700080137677", "700080137768", "700080137806", "700080137821", "700080137866", "700080137867", "700246425056", "700246425176", "700246425286", "700246425311", "700246425348", "700246425451", "700246425511", "700246425535", "700246425537", "700246425565", "700246425582", "700246425617", "700246425714", "700246425716", "700246425742", "700246425844", "700246425860", "700246425887", "700254767322", "700254767872", "700262077565", "700314016081", "700314016116", "700370428418", "700370428588", "700532117715", "700532117814", "700542570063", "700542570633", "700548118787", "700582305111", "700582305332", "700740442111", "700740442455", "701017740254", "701315031042", "701315031127", "701815263208", "703015830113", "703015830152", "703378643723", "70451114073", "70451114176", "70451114534", "70451114585", "705174138267", "705174138381", "706047327471", "706047327756", "707378050300", "707378050354", "711267842645", "712165081162", "712165081868", "7125", "713337205160", "713337205583", "713455476623", "713467187057", "713467187131", "713777200412", "713777200858", "713817270160", "713817270783", "716274715558", "71627683061", "71627683435", "716380425523", "716401347158", "716480288778", "716871815606", "717388360075", "717522448185", "71851728404", "718715643658", "718841222412", "718841222486", "720812238353", "720887256347", "720887256415", "721677024488", "721851427268", "721851427575", "722143084546", "722182107166", "722273415307", "722375313460", "722375313564", "722526472084", "722545641532", "722553383883", "722732012381", "722874458435", "72308788866", "724015147428", "724512063216", "724514305205", "724514305834", "724614312426", "724658725868", "724737883850", "72732", "730650023206", "736387104557", "736387104570", "736387104712", "737101551061", "737545156033", "737545156162", "737545156432", "737545156544", "737545156642", "737545156661", "749237324082", "749237324654", "749441015486", "749441015510", "751408247606", "751438841860", "751688178412", "75285422226", "752885087417", "755123707272", "755562502757", "757405442065", "757405442378", "757405442573", "757405442650", "757405442886", "757507107517", "763037068611", "763037068887", "763484448333", "763484448453", "764507435818", "775825534117", "775825534416", "77657210510", "77657210848", "776825480166", "777887102237", "777887102677", "779075668017", "779075668124", "779213572008", "779213572813", "779237627343", "779324836258", "779414440045", "779414440630", "779448501037", "779448501144", "779448501352", "779448501858", "779510623067", "779510623768", "779531805162", "779531805271", "779632231248", "779632231351", "779653467726", "779653467828", "779677421543", "779723888546", "779723888736", "779724800384", "779724800726", "779745387364", "779856240110", "780038857236", "780103418056", "780103418648", "780153554017", "780153554578", "780266475856", "780370152148", "780370152567", "780484374027", "780484374288", "780502737538", "780538066523", "780538066744", "780621113215", "780621113635", "780680821207", "780680821314", "78083116121", "781042623424", "781042623820", "781632771175", "781632771546", "781703775512", "781787040224", "781787040321", "781805136040", "781805136307", "782036810732", "782144275610", "782144275683", "782150676414", "782442074225", "782442074481", "782831223056", "782831223118", "782841876243", "782841876336", "782868034768", "784150568016", "784150568855", "784303005300", "784315431235", "784315431366", "784327765128", "784342452016", "784462588845", "784535268000", "784535268170", "784535268420", "784535268424", "784535268470", "784535268514", "784535268712", "784535268808", "784535268824", "784536145426", "784648230642", "785027535525", "785128410120", "785215621772", "78532418363", "78532418807", "785378583124", "785385687418", "785385687724", "785441436175", "785441436721", "785454605837", "785501227528", "785501227811", "785577585083", "785577585736", "785626885367", "785626885422", "785630778476", "785654424152", "785654424761", "786232018337", "786360573013", "786541300101", "786644300540", "787170276680", "787455862348", "787531471178", "787531471630", "787602151848", "787637382608", "788370344567", "790315886222", "790315886600", "791427772364", "791427772608", "791481527066", "791481527720", "791641452425", "792353228640", "794036881148", "794485503022", "796055317062", "796055317616", "79615122127", "796324210627", "796854253877", "798352280352", "798386881642", "799441311370", "800003105234", "800003105846", "800016180230", "800016180308", "800053403044", "800053403060", "800071443110", "800071443286", "800122075314", "800122075671", "800224630565", "800224630802", "800225155044", "800225155575", "800248854564", "800248854711", "800281657130", "800281657300", "800302442351", "800302442704", "800315851118", "800315851888", "800324825002", "800324825718", "800388633015", "800388633115", "800388633183", "800388633303", "800414025161", "800414025226", "800415631402", "800415631858", "800453881318", "800453881553", "800483281248", "800483281527", "800487570350", "800487570766", "800487570838", "800542584020", "800542584485", "800607434381", "800607434568", "800672647006", "800672647683", "800678838512", "800678838617", "800700073617", "800700073667", "800757352171", "800757352873", "800778616165", "800778616772", "800882511833", "800882511878", "801075076431", "801804023036", "801804023587", "801827571277", "801827571308", "801827571366", "801827571407", "801827571712", "801827571773", "802183488048", "802183488264", "802340212080", "802340212233", "802351668017", "802351668517", "802765846204", "804162324823", "804638203216", "804638203276", "804664848047", "805327628342", "807418853228", "807754423882", "807808355102", "807808355565", "809816255007", "809816255128", "809816255624", "810016846543", "810016846835", "81033584241", "81033584388", "810507024223", "810507024302", "810513528334", "810513528525", "810652680614", "810880865647", "811602381316", "812017616026", "812017616234", "812216501481", "812216501513", "814153583", "814153876", "815416346131", "815555662752", "818005777257", "818005777288", "818005777382", "818005777606", "81818536176", "81825043376", "818614673058", "818614673431", "818642471371", "818642471682", "819015761188", "819015761552", "819038063720", "819038063724", "819100407830", "819100407842", "819137688512", "819137688582", "819201005152", "819201005380", "819204863008", "819204863665", "819205710137", "819205710485", "819221463132", "819221463336", "819223733540", "819223733574", "819254661640", "819254661885", "819310482020", "819310482830", "819334336447", "819334336764", "819351357272", "819351357736", "819463320320", "819463320445", "819534710635", "819534710801", "819556327043", "819556327136", "819574525041", "819574525200", "819656352053", "819656352177", "819728801724", "819728801736", "819730235535", "819730235736", "819801063225", "819801063564", "819822143046", "819822143525", "821137325288", "822158885241", "822232687073", "822441837025", "822441837203", "82363213126", "82385517844", "824124750055", "824124750301", "824124750418", "824124750436", "824124750476", "824124750532", "824374214117", "824374214478", "824374214524", "824374214632", "824374214782", "824662510161", "827430706068", "827430706162", "827430706302", "827430706824", "827461648552", "827461648808", "827584118207", "828266146", "830016333566", "830016333885", "830110101407", "830144528130", "830144528578", "830151543103", "830183812477", "830183812686", "830206563423", "830206563764", "830232544042", "830232544254", "830366380046", "830366380513", "830367417647", "83052167308", "830561083035", "83058477404", "830615802238", "830621370083", "830625388216", "830625388332", "83065074266", "830658067471", "830665848568", "830665848743", "830668708663", "830668708668", "830722370", "830722768", "830727368167", "830727368828", "830747123333", "830747123850", "830750041168", "830750041206", "830838175355", "830851185075", "830851185555", "830858385062", "830858385342", "831040428841", "831102040163", "831102040575", "831122650262", "831122650341", "831204552841", "831234628422", "831234628560", "831238722150", "831238722276", "831273410302", "831273410318", "831344886555", "831522628834", "831772833014", "831772833044", "831772833161", "831772833228", "831772833331", "831772833405", "831772833464", "831772833588", "831772833613", "831772833640", "831772833641", "831772833643", "831772833648", "831772833761", "831777720308", "831777720824", "832150836128", "83215573433", "832180632252", "83234316105", "832386353372", "832460308260", "832603646625", "83276270162", "833202135227", "836155265230", "836155265814", "836172146174", "836172146338", "836172146447", "836172146601", "836172146605", "836247522288", "836247522321", "836272488231", "836272488522", "836336631362", "836403515056", "836403515144", "836484708682", "836484708732", "836612821328", "836612821414", "836762538", "836774801504", "836774801876", "836787347433", "836787347502", "836878833601", "839127242213", "839127242286", "839127242671", "839127242773", "839446612284", "839446612774", "839761114231", "841714661768", "842024503484", "842024503653", "842565722", "84315", "849348467773", "85547515431", "85547515774", "85663164541", "86075457502", "861012564456", "861012564766", "861012564787", "861020051278", "861024566250", "861034614523", "861043406061", "861088565047", "861088565866", "861103701182", "861103701460", "861117208423", "861122567513", "861122567830", "861122638432", "861124843054", "861142251155", "861142251187", "861142251745", "861153444548", "861157050261", "861157050645", "861157417114", "861160316174", "861170621665", "861172310204", "861172310563", "861177152522", "861180814031", "861180814630", "861201680418", "861201680553", "861216200685", "861246123674", "861251163670", "861273024102", "861273024566", "861278084883", "861284610476", "861285673712", "861288161800", "861300782234", "861300782731", "861300782741", "861300782812", "861304486233", "861304486855", "861318220651", "861320120452", "861321762417", "861321762817", "861325181021", "861325181441", "861355108070", "861355108744", "861356482664", "861365753614", "861381432848", "861384844344", "861435175042", "861435175857", "861440746456", "861448237283", "861457330438", "861457330772", "861461663244", "861461663348", "861462856200", "861462856572", "861466037108", "861467611545", "861467663246", "861471504227", "861471775886", "861475585854", "861482020168", "861482020263", "861483421417", "861506681284", "861506681374", "861510164320", "861518781606", "861520144213", "861520144670", "861521512048", "861521512117", "861521512602", "861526031308", "861526031707", "861528185005", "861528185661", "861532731347", "861532731746", "861534324750", "861544648635", "861544648711", "861545607001", "861545607530", "861550421275", "861550421474", "861558601252", "861558601550", "861565862154", "861620027013", "861620361017", "861622056626", "861627887231", "861627887616", "861650147737", "861651775158", "861652386106", "861681447460", "861682487815", "861683136780", "861685285550", "861687205387", "861688042027", "861704841567", "861712161206", "861712161355", "861723526328", "861732408486", "861732408755", "861738554217", "861740857354", "861742052404", "861743341203", "861750366150", "861760173881", "861781812716", "861808354334", "861808833325", "861812431133", "861812584148", "861822753366", "861830302225", "861831428348", "861832267123", "861832267222", "861832267366", "861834783405", "861834783775", "861848282461", "861848282506", "861858848261", "861858848770", "861881316072", "862133501412", "862133501684", "862177371583", "86220236071", "862400638550", "862400638742", "862683042223", "862683042231", "862800275607", "862800275774", "862821704118", "862821704340", "862882486158", "862882486618", "864285553", "866578102288", "868553007", "870453417537", "871011002", "871860705087", "872543715", "87316736735", "874606274", "876884652405", "877215704", "878032313", "878670763205", "878670763234", "878670763380", "878670763602", "878670763625", "878670763642", "878670763647", "878670763777", "878670763871", "879500625164", "879500625306", "880287236740", "881366551736", "882402373680", "883364010001", "883364010306", "883366857135", "883366857557", "883440137112", "883522374046", "883522374084", "883802025507", "883802025585", "884244434187", "885555187038", "887455187663", "888150678460", "892033418405", "892033418463", "892104408628", "892104408880", "892142442722", "892331067056", "892454281375", "892454281480", "892823547111", "892823547330", "893313566836", "899704478863", "9046260057", "9068100164", "9075512104", "9075512142", "9075512151", "9075512200", "9075512230", "9075512268", "9075512288", "9075512342", "9075512375", "9075512385", "9075512522", "9075512664", "9075512708", "9075512801", "915008851444", "915008851506", "915020008758", "915076075252", "915176003540", "915208862024", "915226744067", "915236567117", "915238845638", "915238845726", "915378786101", "915518573066", "915740613160", "915740613260", "915801153344", "915815336814", "915871884164", "915878568274", "915882845754", "9210416751", "934004387301", "934004387447", "934826216212", "9407252304", "9407865556", "9413482701", "9413625851", "9422375764", "9435117462", "9438680568", "9440714417", "9447125218", "9454123506", "9454123557", "9472531186", "961160544345", "966370532458", "989845344335", "A002S01R001", "A003S02R009", "D001Q01Z092", "D009H20T001", "D009H20T005", "D009H20T007", "D009H20T012", "F001S06R007", "G002S02R010", "H001H01B01", "H001Y01M01", "K001N01Z001", "L001A01A001", "L001S01R001", "N001G01R002", "N001G01R003", "N001G01R004", "N001G01R005", "N001H01Y003", "N001H01Y005", "N001Q01C001", "N001S01R002", "N001S01R004", "N001S01R005", "Q001L01S001", "T001S01H001", "T002B001X01", "T002J01J001", "T002N01M01", "T002N01M02", "X001S01R001", "Z001T01G016"]);

let allEmbeddings = await readCSV(CSV_FILE);
allEmbeddings = allEmbeddings.filter(product => {
  return `${product.parent_front_category_name}${product.front_category_name}`.length > 1 && all_hangzhou_sku.has(product.sku)
});

app.get('/api/embedding/search', async (req, res) => {
  let searchQuery = req.query.query, topN = req.query.topN || 10;
  let embeddingOfQuery = USE_AZURE ? await getEmbeddingsFromAzure(searchQuery) : await getEmbeddingForInput(searchQuery);
  let matched = await stringsRankedByRelatedness(embeddingOfQuery, allEmbeddings, topN);
  res.json({ data: matched });
});

app.listen(port, () => {
  console.log(`server running on: http://${process.env.my_ip}:${port}`)
});